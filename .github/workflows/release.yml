name: release

on:
   workflow_dispatch:
      inputs:
         version:
            description: "The release version"
            required: true
         branch:
            description: "The branch to release from"
            required: true
            default: 'master'

jobs:
   publish_windows:
      runs-on: windows-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '11'
               distribution: 'zulu'

         -  name: deploy to sonatype
            run: ./gradlew publishMingwX64PublicationToDeployRepository
            env:


   publish_macos:
      depend-on: publish_windows
      runs-on: macos-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '11'
               distribution: 'zulu'

         -  name: publish macosx64 release
            run: ./gradlew publishMacosX64PublicationToDeployRepository

         -  name: publish macosArm64 release
            run: ./gradlew publishMacosArm64PublicationToDeployRepository

         -  name: publish tvosX64 release
            run: ./gradlew publishTvosX64PublicationToDeployRepository

         -  name: publish tvosArm64 release
            run: ./gradlew publishTvosArm64PublicationToDeployRepository

         -  name: publish watchosX86 release
            run: ./gradlew publishWatchosX86PublicationToDeployRepository

         -  name: publish watchosX64 release
            run: ./gradlew publishWatchosX64PublicationToDeployRepository

         -  name: publish watchosArm32 release
            run: ./gradlew publishWatchosArm32PublicationToDeployRepository

         -  name: publish watchosArm64 release
            run: ./gradlew publishWatchosArm64PublicationToDeployRepository

         -  name: publish iosX64 release
            run: ./gradlew publishIosX64PublicationToDeployRepository

         -  name: publish iosArm64 release
            run: ./gradlew publishIosArm64PublicationToDeployRepository

         -  name: publish iosArm32 release
            run: ./gradlew publishIosArm32PublicationToDeployRepository

         -  name: publish iosArm32 release
            run: ./gradlew publishIosSimulatorArm64PublicationToDeployRepository

   publish_linux_and_common:
      depend-on: publish_macos
      runs-on: ubuntu-latest

      steps:
         -  name: Checkout the repo
            uses: actions/checkout@v3
            with:
               fetch-depth: 0
               ref: ${{ github.event.inputs.branch }}

         -  name: Setup JDK
            uses: actions/setup-java@v3
            with:
               java-version: '11'
               distribution: 'zulu'

         -  name: publish multiplatform release
            run: ./gradlew publishKotlinMultiplatformPublicationToDeployRepository

         -  name: publish jvm release
            run: ./gradlew publishJvmPublicationToDeployRepository

         -  name: publish js release
            run: ./gradlew publishJsPublicationToDeployRepository

         -  name: publish linux release
            run: ./gradlew publishLinuxX64PublicationToDeployRepository

env:
   GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
   RELEASE_VERSION: ${{ github.event.inputs.version }}
   OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
   OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
   ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
   ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
